{
    "name": "symplify/phpstan-rules",
    "type": "phpstan-extension",
    "description": "Set of Symplify rules for PHPStan",
    "license": "MIT",
    "require": {
        "php": ">=7.3",
        "nikic/php-parser": "4.10.4",
        "nette/utils": "^3.2",
        "phpstan/phpdoc-parser": "^1.2",
        "phpstan/phpstan": "0.12.85",
        "symplify/astral": "^9.4",
        "symplify/package-builder": "^9.4",
        "symplify/smart-file-system": "^9.4",
        "symplify/rule-doc-generator-contracts": "^9.4",
        "webmozart/assert": "^1.9"
    },
    "require-dev": {
        "nette/application": "^3.1",
        "nette/forms": "^3.1",
        "symplify/easy-testing": "^9.4",
        "symplify/phpstan-extensions": "^9.4",
        "symplify/rule-doc-generator": "^9.4",
        "phpunit/phpunit": "^9.5",
        "symfony/framework-bundle": "^4.4|^5.2"
    },
    "autoload": {
        "psr-4": {
            "Symplify\\PHPStanRules\\": "src",
            "Symplify\\PHPStanRules\\CognitiveComplexity\\": "packages/cognitive-complexity/src",
            "Symplify\\PHPStanRules\\ObjectCalisthenics\\": "packages/object-calisthenics/src"
        }
    },
    "autoload-dev": {
        "files": [
            "tests/Rules/NoFuncCallInMethodCallRule/Source/Namespaced.php"
        ],
        "psr-4": {
            "Symplify\\PHPStanRules\\Tests\\": "tests",
            "Symplify\\PHPStanRules\\ObjectCalisthenics\\Tests\\": "packages/object-calisthenics/tests",
            "Symplify\\PHPStanRules\\CognitiveComplexity\\Tests\\": "packages/cognitive-complexity/tests"
        }
    },
    "extra": {
        "branch-alias": {
            "dev-main": "9.4-dev"
        },
        "phpstan": {
            "includes": [
                "config/services/services.neon",
                "packages/cognitive-complexity/config/cognitive-complexity-services.neon",
                "packages/object-calisthenics/config/object-calisthenics-services.neon"
            ]
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
